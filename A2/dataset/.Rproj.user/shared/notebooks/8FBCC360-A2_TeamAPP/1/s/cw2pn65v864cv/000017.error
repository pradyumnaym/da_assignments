{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"(function (x, ...) \nUseMethod(\"print\"))(x)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"print.htmlwidget(x)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"htmlwidgets:::toHTML(x, standalone = TRUE, knitrOptions = knitrOptions)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"htmltools::tagList(container(htmltools::tagList(x$prepend, widget_html(name = class(x)[1], \n    package = attr(x, \"package\"), id = id, style = style, class = paste(class(x)[1], \n        \"html-widget\"), width = sizeInfo$width, height = sizeInfo$height), \n    x$append)), widget_data(x, id), if (!is.null(sizeInfo$runtime)) { ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"widget_data(x, id)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"toJSON(createPayload(x))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"createPayload(x)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"instance$preRenderHook(instance)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"plotly_build.plotly(instance)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Map(function(x, y) {\n    dat <- plotly_data(p, y)\n    trace <- structure(rapply(x, eval_attr, data = dat, how = \"list\"), \n        class = oldClass(x)) ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mapply(FUN = f, ..., SIMPLIFY = FALSE)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"(function (x, y) \n{\n    dat <- plotly_data(p, y)\n    trace <- structure(rapply(x, eval_attr, data = dat, how = \"list\"),  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"verify_type(trace)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(\"Trace type must be one of the following: \\n\", \"'\", paste(names(Schema$traces), \n    collapse = \"', '\"), \"'\", call. = FALSE)","line_number":0}],"message":"Error: Trace type must be one of the following: \n'scatter', 'bar', 'box', 'heatmap', 'histogram', 'histogram2d', 'histogram2dcontour', 'contour', 'scatterternary', 'violin', 'waterfall', 'pie', 'sunburst', 'scatter3d', 'surface', 'isosurface', 'mesh3d', 'cone', 'streamtube', 'scattergeo', 'choropleth', 'scattergl', 'splom', 'pointcloud', 'heatmapgl', 'parcoords', 'parcats', 'scattermapbox', 'sankey', 'table', 'carpet', 'scattercarpet', 'contourcarpet', 'ohlc', 'candlestick', 'scatterpolar', 'scatterpolargl', 'barpolar', 'area'\n"}